/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../../core";

export const FindLobbyInput: core.serialization.Schema<
    serializers.matchmaker.FindLobbyInput.Raw,
    Omit<Rivet.matchmaker.FindLobbyInput, "origin">
> = core.serialization.object({
    gameModes: core.serialization.property("game_modes", core.serialization.list(core.serialization.string())),
    regions: core.serialization.list(core.serialization.string()).optional(),
    preventAutoCreateLobby: core.serialization.property(
        "prevent_auto_create_lobby",
        core.serialization.boolean().optional()
    ),
    captcha: core.serialization.lazyObject(async () => (await import("../../../../../..")).captcha.Config).optional(),
});

export declare namespace FindLobbyInput {
    interface Raw {
        game_modes: string[];
        regions?: string[] | null;
        prevent_auto_create_lobby?: boolean | null;
        captcha?: serializers.captcha.Config.Raw | null;
    }
}
