/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const GetBatchOutput: core.serialization.ObjectSchema<
    serializers.kv.GetBatchOutput.Raw,
    Rivet.kv.GetBatchOutput
> = core.serialization.object({
    entries: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).kv.Entry)
    ),
    watch: core.serialization.lazyObject(async () => (await import("../../../../..")).WatchResponse),
});

export declare namespace GetBatchOutput {
    interface Raw {
        entries: serializers.kv.Entry.Raw[];
        watch: serializers.WatchResponse.Raw;
    }
}
