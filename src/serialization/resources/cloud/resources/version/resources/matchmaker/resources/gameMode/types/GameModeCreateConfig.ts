/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../../../../../core";

export const GameModeCreateConfig: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameModeCreateConfig.Raw,
    Rivet.cloud.version.matchmaker.GameModeCreateConfig
> = core.serialization.object({
    identityRequirement: core.serialization.property(
        "identity_requirement",
        core.serialization.lazy(
            async () =>
                (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeIdentityRequirement
        )
    ),
    verificationConfig: core.serialization.property(
        "verification_config",
        core.serialization
            .lazyObject(
                async () =>
                    (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeVerificationConfig
            )
            .optional()
    ),
    enablePublic: core.serialization.property("enable_public", core.serialization.boolean()),
    enablePrivate: core.serialization.property("enable_private", core.serialization.boolean()),
    maxLobbiesPerIdentity: core.serialization.property(
        "max_lobbies_per_identity",
        core.serialization.number().optional()
    ),
});

export declare namespace GameModeCreateConfig {
    interface Raw {
        identity_requirement: serializers.cloud.version.matchmaker.GameModeIdentityRequirement.Raw;
        verification_config?: serializers.cloud.version.matchmaker.GameModeVerificationConfig.Raw | null;
        enable_public: boolean;
        enable_private: boolean;
        max_lobbies_per_identity?: number | null;
    }
}
