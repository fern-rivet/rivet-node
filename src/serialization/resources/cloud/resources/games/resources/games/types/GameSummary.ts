/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../..";
import * as Rivet from "../../../../../../../../api";
import * as core from "../../../../../../../../core";

export const GameSummary: core.serialization.ObjectSchema<
    serializers.cloud.games.GameSummary.Raw,
    Rivet.cloud.games.GameSummary
> = core.serialization.object({
    gameId: core.serialization.property("game_id", core.serialization.string()),
    createTs: core.serialization.property("create_ts", core.serialization.date()),
    nameId: core.serialization.property("name_id", core.serialization.string()),
    displayName: core.serialization.property("display_name", core.serialization.string()),
    developerGroupId: core.serialization.property("developer_group_id", core.serialization.string()),
    totalPlayerCount: core.serialization.property("total_player_count", core.serialization.number().optional()),
    logoUrl: core.serialization.property("logo_url", core.serialization.string().optional()),
    bannerUrl: core.serialization.property("banner_url", core.serialization.string().optional()),
});

export declare namespace GameSummary {
    interface Raw {
        game_id: string;
        create_ts: string;
        name_id: string;
        display_name: string;
        developer_group_id: string;
        total_player_count?: number | null;
        logo_url?: string | null;
        banner_url?: string | null;
    }
}
