/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const AnalyticsLobbySummary: core.serialization.ObjectSchema<
    serializers.cloud.AnalyticsLobbySummary.Raw,
    Rivet.cloud.AnalyticsLobbySummary
> = core.serialization.object({
    lobbyId: core.serialization.property("lobby_id", core.serialization.string()),
    lobbyGroupId: core.serialization.property("lobby_group_id", core.serialization.string()),
    lobbyGroupNameId: core.serialization.property("lobby_group_name_id", core.serialization.string()),
    regionId: core.serialization.property("region_id", core.serialization.string()),
    createTs: core.serialization.property("create_ts", core.serialization.date()),
    isReady: core.serialization.property("is_ready", core.serialization.boolean()),
    isIdle: core.serialization.property("is_idle", core.serialization.boolean()),
    isClosed: core.serialization.property("is_closed", core.serialization.boolean()),
    isOutdated: core.serialization.property("is_outdated", core.serialization.boolean()),
    maxPlayersNormal: core.serialization.property("max_players_normal", core.serialization.number()),
    maxPlayersDirect: core.serialization.property("max_players_direct", core.serialization.number()),
    maxPlayersParty: core.serialization.property("max_players_party", core.serialization.number()),
    totalPlayerCount: core.serialization.property("total_player_count", core.serialization.number()),
    registeredPlayerCount: core.serialization.property("registered_player_count", core.serialization.number()),
});

export declare namespace AnalyticsLobbySummary {
    interface Raw {
        lobby_id: string;
        lobby_group_id: string;
        lobby_group_name_id: string;
        region_id: string;
        create_ts: string;
        is_ready: boolean;
        is_idle: boolean;
        is_closed: boolean;
        is_outdated: boolean;
        max_players_normal: number;
        max_players_direct: number;
        max_players_party: number;
        total_player_count: number;
        registered_player_count: number;
    }
}
