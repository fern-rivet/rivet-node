/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const GetGroupBillingResponse: core.serialization.ObjectSchema<
    serializers.cloud.GetGroupBillingResponse.Raw,
    Rivet.cloud.GetGroupBillingResponse
> = core.serialization.object({
    billing: core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.GroupBillingSummary),
    bankSource: core.serialization.property(
        "bank_source",
        core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.GroupBankSource)
    ),
    availableRegions: core.serialization.property(
        "available_regions",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.RegionSummary)
        )
    ),
});

export declare namespace GetGroupBillingResponse {
    interface Raw {
        billing: serializers.cloud.GroupBillingSummary.Raw;
        bank_source: serializers.cloud.GroupBankSource.Raw;
        available_regions: serializers.cloud.RegionSummary.Raw[];
    }
}
