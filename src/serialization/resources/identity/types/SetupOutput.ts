/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../core";

export const SetupOutput: core.serialization.ObjectSchema<
    serializers.identity.SetupOutput.Raw,
    Rivet.identity.SetupOutput
> = core.serialization.object({
    identityToken: core.serialization.property(
        "identity_token",
        core.serialization.lazy(async () => (await import("../../..")).Jwt)
    ),
    identityTokenExpireTs: core.serialization.property(
        "identity_token_expire_ts",
        core.serialization.lazy(async () => (await import("../../..")).Timestamp)
    ),
    identity: core.serialization.lazyObject(async () => (await import("../../..")).identity.Profile),
    gameId: core.serialization.property("game_id", core.serialization.string()),
});

export declare namespace SetupOutput {
    interface Raw {
        identity_token: serializers.Jwt.Raw;
        identity_token_expire_ts: serializers.Timestamp.Raw;
        identity: serializers.identity.Profile.Raw;
        game_id: string;
    }
}
