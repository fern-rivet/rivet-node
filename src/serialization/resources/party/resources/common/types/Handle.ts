/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const Handle: core.serialization.ObjectSchema<serializers.party.Handle.Raw, Rivet.party.Handle> =
    core.serialization.object({
        partyId: core.serialization.property("party_id", core.serialization.string()),
        createTs: core.serialization.property("create_ts", core.serialization.date()),
        activity: core.serialization.lazyObject(async () => (await import("../../../../..")).party.Activity),
        external: core.serialization.lazyObject(async () => (await import("../../../../..")).party.ExternalLinks),
    });

export declare namespace Handle {
    interface Raw {
        party_id: string;
        create_ts: string;
        activity: serializers.party.Activity.Raw;
        external: serializers.party.ExternalLinks.Raw;
    }
}
