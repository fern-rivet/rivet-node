/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { Rivet } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const MemberSummary: core.serialization.ObjectSchema<
    serializers.party.MemberSummary.Raw,
    Rivet.party.MemberSummary
> = core.serialization.object({
    identity: core.serialization.lazyObject(async () => (await import("../../../../..")).identity.Handle),
    isLeader: core.serialization.property("is_leader", core.serialization.boolean()),
    joinTs: core.serialization.property("join_ts", core.serialization.date()),
    state: core.serialization.lazyObject(async () => (await import("../../../../..")).party.MemberState),
});

export declare namespace MemberSummary {
    interface Raw {
        identity: serializers.identity.Handle.Raw;
        is_leader: boolean;
        join_ts: string;
        state: serializers.party.MemberState.Raw;
    }
}
