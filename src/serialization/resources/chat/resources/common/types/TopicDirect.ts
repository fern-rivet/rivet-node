/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const TopicDirect: core.serialization.ObjectSchema<serializers.chat.TopicDirect.Raw, Rivet.chat.TopicDirect> =
    core.serialization.object({
        identityA: core.serialization.property(
            "identity_a",
            core.serialization.lazyObject(async () => (await import("../../../../..")).identity.Handle)
        ),
        identityB: core.serialization.property(
            "identity_b",
            core.serialization.lazyObject(async () => (await import("../../../../..")).identity.Handle)
        ),
    });

export declare namespace TopicDirect {
    interface Raw {
        identity_a: serializers.identity.Handle.Raw;
        identity_b: serializers.identity.Handle.Raw;
    }
}
