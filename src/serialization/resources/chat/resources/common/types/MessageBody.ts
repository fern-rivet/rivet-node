/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const MessageBody: core.serialization.ObjectSchema<serializers.chat.MessageBody.Raw, Rivet.chat.MessageBody> =
    core.serialization.object({
        text: core.serialization
            .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyText)
            .optional(),
        chatCreate: core.serialization.property(
            "chat_create",
            core.serialization
                .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyChatCreate)
                .optional()
        ),
        deleted: core.serialization
            .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyDeleted)
            .optional(),
        identityFollow: core.serialization.property(
            "identity_follow",
            core.serialization
                .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyIdentityFollow)
                .optional()
        ),
        groupJoin: core.serialization.property(
            "group_join",
            core.serialization
                .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyGroupJoin)
                .optional()
        ),
        groupLeave: core.serialization.property(
            "group_leave",
            core.serialization
                .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyGroupLeave)
                .optional()
        ),
        groupMemberKick: core.serialization.property(
            "group_member_kick",
            core.serialization
                .lazyObject(async () => (await import("../../../../..")).chat.MessageBodyGroupMemberKick)
                .optional()
        ),
    });

export declare namespace MessageBody {
    interface Raw {
        text?: serializers.chat.MessageBodyText.Raw | null;
        chat_create?: serializers.chat.MessageBodyChatCreate.Raw | null;
        deleted?: serializers.chat.MessageBodyDeleted.Raw | null;
        identity_follow?: serializers.chat.MessageBodyIdentityFollow.Raw | null;
        group_join?: serializers.chat.MessageBodyGroupJoin.Raw | null;
        group_leave?: serializers.chat.MessageBodyGroupLeave.Raw | null;
        group_member_kick?: serializers.chat.MessageBodyGroupMemberKick.Raw | null;
    }
}
