/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Client as AuthClient } from "../resources/auth/client/Client";
import { Client as DevicesClient } from "../resources/devices/client/Client";
import { Client as GamesClient } from "../resources/games/client/Client";
import { Client as GroupsClient } from "../resources/groups/client/Client";
import { Client as LogsClient } from "../resources/logs/client/Client";
import { Client as TiersClient } from "../resources/tiers/client/Client";
import { Client as UploadsClient } from "../resources/uploads/client/Client";

export declare namespace Client {
    interface Options {
        environment?: environments.RivetEnvironment | environments.RivetEnvironmentUrls;
        token?: core.Supplier<core.BearerToken>;
    }
}

export class Client {
    constructor(private readonly options: Client.Options) {}

    private _auth: AuthClient | undefined;

    public get auth(): AuthClient {
        return (this._auth ??= new AuthClient(this.options));
    }

    private _devices: DevicesClient | undefined;

    public get devices(): DevicesClient {
        return (this._devices ??= new DevicesClient(this.options));
    }

    private _games: GamesClient | undefined;

    public get games(): GamesClient {
        return (this._games ??= new GamesClient(this.options));
    }

    private _groups: GroupsClient | undefined;

    public get groups(): GroupsClient {
        return (this._groups ??= new GroupsClient(this.options));
    }

    private _logs: LogsClient | undefined;

    public get logs(): LogsClient {
        return (this._logs ??= new LogsClient(this.options));
    }

    private _tiers: TiersClient | undefined;

    public get tiers(): TiersClient {
        return (this._tiers ??= new TiersClient(this.options));
    }

    private _uploads: UploadsClient | undefined;

    public get uploads(): UploadsClient {
        return (this._uploads ??= new UploadsClient(this.options));
    }
}
