/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Client as IdentityClient } from "../resources/identity/client/Client";
import { Client as TokensClient } from "../resources/tokens/client/Client";

export declare namespace Client {
    interface Options {
        environment?: environments.RivetEnvironment | environments.RivetEnvironmentUrls;
        token?: core.Supplier<core.BearerToken>;
    }
}

export class Client {
    constructor(private readonly options: Client.Options) {}

    #identity: IdentityClient | undefined;

    public get identity(): IdentityClient {
        return (this.#identity ??= new IdentityClient(this.options));
    }

    #tokens: TokensClient | undefined;

    public get tokens(): TokensClient {
        return (this.#tokens ??= new TokensClient(this.options));
    }
}
