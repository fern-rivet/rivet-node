/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Chat } from "./api/resources/chat/client/Client";
import { Cloud } from "./api/resources/cloud/client/Client";
import { Group } from "./api/resources/group/client/Client";
import { Identity } from "./api/resources/identity/client/Client";
import { Kv } from "./api/resources/kv/client/Client";
import { Module } from "./api/resources/module/client/Client";
import { Matchmaker } from "./api/resources/matchmaker/client/Client";

export declare namespace RivetClient {
    interface Options {
        environment?: environments.RivetEnvironment | environments.RivetEnvironmentUrls;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}

export class RivetClient {
    constructor(private readonly options: RivetClient.Options) {}

    private _chat: Chat | undefined;

    public get chat(): Chat {
        return (this._chat ??= new Chat(this.options));
    }

    private _cloud: Cloud | undefined;

    public get cloud(): Cloud {
        return (this._cloud ??= new Cloud(this.options));
    }

    private _group: Group | undefined;

    public get group(): Group {
        return (this._group ??= new Group(this.options));
    }

    private _identity: Identity | undefined;

    public get identity(): Identity {
        return (this._identity ??= new Identity(this.options));
    }

    private _kv: Kv | undefined;

    public get kv(): Kv {
        return (this._kv ??= new Kv(this.options));
    }

    private _module: Module | undefined;

    public get module(): Module {
        return (this._module ??= new Module(this.options));
    }

    private _matchmaker: Matchmaker | undefined;

    public get matchmaker(): Matchmaker {
        return (this._matchmaker ??= new Matchmaker(this.options));
    }
}
